/*
 * Créé par David Ringuet le 21/09/2017
 * Dernière modification : x/x/x
 * Remis le x/x/x à x:x
 * 
 */

import java.io.*;
import java.text.NumberFormat;

public class MainTp2 {

	public static void main(String[] args) throws IOException{
		
		

	}
	
	/*
	 * La méthode formaterNb() permet de formater un nombre dans 
	 * le format 9999,99.
	 *
	 * Paramètres : Le nombre à formater et le nombre de décimales
	 *				à mettre après la virgule.
	 *
	 * Retourne : la chaîne de caractères contenant le nombre formaté.
	 */
	
	private static String formaterNb( double nb, int dec ) {
		NumberFormat formatNb = NumberFormat.getNumberInstance();
		
		formatNb.setMinimumIntegerDigits( 1 );
		formatNb.setMinimumFractionDigits( dec );
		formatNb.setMaximumFractionDigits( dec );
		
		return formatNb.format( nb );
	}
	
	/*
	 * La méthode formaterMonetaire() permet de formater un 
	 * nombre dans le format 9 999,99 $.
	 *
	 * Paramètres : le nombre à formater et le nombre de décimales
	 *				à mettre après la virgule.
	 *
	 * Retourne : la chaîne de caractères contenant le nombre formaté.
	 */
	
	private static String formaterMonetaire( double nb, int dec ) {
		NumberFormat formatNb = NumberFormat.getCurrencyInstance();
	
		formatNb.setMinimumIntegerDigits( 1 );
		formatNb.setMinimumFractionDigits( dec );
		formatNb.setMaximumFractionDigits( dec );
		
		return formatNb.format(nb);
	}
	
	/*
	 * La méthode formaterPourcentage() permet de formater un 
	 * nombre dans le format 9 999,99 %.
	 *
	 * Paramètres : le nombre à formater et le nombre de décimales
	 *				à mettre après la virgule.
	 *
	 * Retourne : la chaîne de caractères contenant le nombre formaté.
	 */
	
	private static String formaterPourcentage( double nb, int dec ) {
		NumberFormat formatNb = NumberFormat.getPercentInstance();
		
		formatNb.setMinimumIntegerDigits( 1 );
		formatNb.setMinimumFractionDigits( dec );
		formatNb.setMaximumFractionDigits( dec );
		
		return formatNb.format( nb );
	}
}
